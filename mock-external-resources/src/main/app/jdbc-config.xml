<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xmlns:jdbc="http://www.mulesoft.org/schema/mule/jdbc"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:context="http://www.springframework.org/schema/context"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/jdbc http://www.mulesoft.org/schema/mule/jdbc/current/mule-jdbc.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

    <context:property-placeholder location="classpath:config.properties"/>

    <spring:beans>
        <spring:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
            <spring:property name="url" value="${jdbc.url}"/>
            <spring:property name="username" value="${jdbc.username}"/>
            <spring:property name="password" value="${jdbc.password}"/>
            <spring:property name="driverClassName" value="${jdbc.driver}"/>
            <spring:property name="initialSize" value="5"/>
            <spring:property name="testOnBorrow" value="true"/>
            <spring:property name="validationQuery" value="${jdbc.validationQuery}"/>
            <spring:property name="maxWait" value="60000"/>
            <spring:property name="maxActive" value="50"/>
            <spring:property name="removeAbandoned" value="true"/>
            <spring:property name="removeAbandonedTimeout" value="300"/>
            <spring:property name="logAbandoned" value="true"/>
        </spring:bean>
        <spring:bean id="liquibase" class="liquibase.integration.spring.SpringLiquibase">
            <spring:property name="dataSource" ref="dataSource"/>
            <spring:property name="changeLog" value="classpath:/jdbc/liquibase/changelog.xml"/>
        </spring:bean>
        <spring:bean id="userByUserNameQuery" class="org.apache.commons.io.IOUtils" factory-method="toString">
            <spring:constructor-arg type="java.io.InputStream">
                <spring:bean class="java.io.FileInputStream" destroy-method="close">
                    <spring:constructor-arg type="java.io.File" value="classpath:/jdbc/query/userByName.sql"/>
                </spring:bean>
            </spring:constructor-arg>
        </spring:bean>

    </spring:beans>
    <jdbc:connector name="defaultJdbcConnector" dataSource-ref="dataSource">
        <jdbc:query key="userByUserName" value-ref="userByUserNameQuery"/>
    </jdbc:connector>

    <vm:endpoint name="getUserInfo" path="user.info" exchange-pattern="request-response"/>
    <flow name="jdbc-test-flow">
        <inbound-endpoint ref="getUserInfo"/>
        <logger level="INFO" category="jdbc-test-flow" message="JDBC Parameters: #[payload]"/>
        <!--<jdbc:outbound-endpoint address="jdbc://select * from User where userName = #[map-payload:users])"/>-->
        <jdbc:outbound-endpoint queryKey="userByUserName" exchange-pattern="request-response"/>
        <logger level="INFO" category="jdbc-test-flow" message="JDBC Query Results: #[payload]"/>
    </flow>
</mule>